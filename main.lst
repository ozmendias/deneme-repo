CCS PCH C Compiler, Version 5.078, 41405               23-May-18 12:05

               Filename:   C:\Users\personpc\Documents\GitHub\deneme-repo\main.lst

               ROM used:   80 bytes (0%)
                           Largest free fragment is 32688
               RAM used:   5 (0%) at main() level
                           5 (0%) worst case
               Stack used: 0 locations
               Stack size: 31

*
0000:  GOTO   0004
.................... #include <main.h> 
.................... #include <18F25K80.h> 
.................... //////////// Standard Header file for the PIC18F25K80 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F25K80 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
....................  
.................... #use delay(crystal=20000000) 
.................... #use FIXED_IO( A_outputs=PIN_A0 ) 
.................... #use FIXED_IO( B_outputs=PIN_B4 ) 
.................... #use FIXED_IO( C_outputs=PIN_C4 ) 
....................  
....................  
.................... #define AHMET  PIN_A0 
.................... #define SEZGIN PIN_B4 
.................... #define FETTAH PIN_C4 
....................  
.................... int8 mehmet = 0; 
....................  
....................  
.................... void main() 
0004:  CLRF   FF8
0006:  BCF    FD0.7
0008:  CLRF   04
000A:  MOVLB  F
000C:  MOVF   x5C,W
000E:  ANDLW  80
0010:  MOVWF  x5C
0012:  MOVLW  00
0014:  MOVWF  x5D
0016:  BCF    FC1.3
0018:  BCF    FC1.4
001A:  BCF    FC1.5
001C:  CLRF   x5E
001E:  CLRF   x5F
.................... { 
....................  
....................    while(TRUE) 
....................    { 
....................        
....................       output_low(AHMET); 
0020:  MOVLW  FE
0022:  MOVWF  F92
0024:  BCF    F89.0
....................       output_high(SEZGIN); 
0026:  MOVLW  EF
0028:  MOVWF  F93
002A:  BSF    F8A.4
....................       mehmet++; 
002C:  INCF   04,F
....................     
....................        
....................        
....................       if(mehmet==25) //10du 15 yapýldý 
002E:  MOVF   04,W
0030:  SUBLW  19
0032:  BTFSS  FD8.2
0034:  GOTO   0044
....................       { 
....................          output_low(Ahmet); 
0038:  MOVLW  FE
003A:  MOVWF  F92
003C:  BCF    F89.0
....................          mehmet = 0; 
003E:  CLRF   04
....................       } 
0040:  GOTO   004A
....................        
....................        
....................       else  
....................       { 
....................          output_low(fettah); 
0044:  MOVLW  EF
0046:  MOVWF  F94
0048:  BCF    F8B.4
....................       } 
004A:  GOTO   0020
....................    } 
....................  
.................... } 
*
004E:  SLEEP 

Configuration Fuses:
   Word  1: C215   VREGSLEEP INTRC_HP SOSC_DIG NOXINST HSH NOPLLEN FCMEN IESO
   Word  2: 7C7E   PUT BROWNOUT BORV18 ZPBORM NOWDT WDT1048576
   Word  3: 8900   CANB MSSPMSK7 MCLR
   Word  4: 0091   STVREN BBSIZ2K NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
